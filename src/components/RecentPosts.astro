---
import { SITE } from "@/siteConfig";
import { fetchAllRSSFeeds, type BlogPost } from "@/lib/rss";
import { formatDate } from "@/lib/util";

let recentPosts: BlogPost[] = [];
let hasError = false;

try {
  if (SITE.recentPosts?.enabled && SITE.recentPosts.feeds.length > 0) {
    recentPosts = await fetchAllRSSFeeds(
      SITE.recentPosts.feeds,
      SITE.recentPosts.count
    );
  }
} catch (error) {
  console.warn('Failed to fetch recent posts:', error);
  hasError = true;
}
---

{hasError && (
  <div class="text-center text-sm text-gray-500">
    Unable to load recent posts at this time.
  </div>
)}

{SITE.recentPosts?.enabled && recentPosts.length > 0 && (
  <section class="recent-posts my-8">
    <h2>MOST RECENT BLOG POSTS</h2>
    
    <div class="mt-4 space-y-3">
      {recentPosts.map((post, index) => (
        <div class="post-item">
          <div class="text-left flex items-start justify-between gap-4">
            <div class="flex-1 min-w-0">
              <span class="font-mono font-medium text-sm leading-tight"><span class="tracking-tighter">{post.source} â€¢ </span>
                <a 
                href={post.url} 
                target="_blank" 
                rel="noopener noreferrer"
                class=""
              >{post.title}
                </span>
              </a>
            </div>
            <div class="flex-shrink-0 text-xs font-mono text-gray-500">
              {index + 1}
            </div>
          </div>
        </div>
      ))}
    </div>
    
    <div class="mt-6 text-center">
      <p class="text-xs text-gray-600 font-mono">
        AGGREGATED FROM {SITE.recentPosts.feeds.length} RSS FEEDS
      </p>
    </div>
  </section>
)}

<style>
  .post-item {
    @apply border-b border-gray-200 pb-3 last:border-b-0 last:pb-0;
  }
  
  
</style>